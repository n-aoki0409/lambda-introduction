AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: sam-example-email

Parameters:
  MailAddress:
    Type: String
  MailTableName:
    Type: String
    Default: "mailaddress"
  BucketName:
    Type: String
    Default: "mail-body-00001234-naoki"

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        MAILADDRESS: !Ref MailAddress
        MAILTABLE: !Ref MailTable
        QUEUENAME: !GetAtt SendQueue.QueueName
    Tracing: Active

Resources:
  S3Mailbody:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref BucketName

  MailTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref MailTableName
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: haserror
          AttributeType: N
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
      GlobalSecondaryIndexes:
        - IndexName: haserror-index
          KeySchema:
            - AttributeName: haserror
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 3
            WriteCapacityUnits: 3

  SendQueue:
    Type: AWS::SQS::Queue

  BounceTopic:
    Type: AWS::SNS::Topic

  SendqueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: send_queue/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - CloudWatchLogsFullAccess
        - AWSXRayDaemonWriteAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MailTable
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage*
                - sqs:GetQueueUrl*
              Resource: !GetAtt SendQueue.Arn
      Events:
        BodyUploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref S3Mailbody
            Events: s3:ObjectCreated:*

  SendmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: send_mail/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - CloudWatchLogsFullAccess
        - AWSXRayDaemonWriteAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MailTable
        - S3ReadPolicy:
            BucketName: !Ref S3Mailbody
        - SESCrudPolicy:
            IdentityName: !Ref MailAddress
      Events:
        SendmailEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SendQueue.Arn
            BatchSize: 10

  BounceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bounce/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - CloudWatchLogsFullAccess
        - AWSXRayDaemonWriteAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MailTable
      Events:
        BounceEvent:
          Type: SNS
          Properties:
            Topic: !Ref BounceTopic

Outputs:
  S3MailBodyArn:
    Value: !GetAtt S3Mailbody.Arn
  SendQueueArn:
    Value: !GetAtt SendQueue.Arn
  BounceTopicArn:
    Value: !Ref BounceTopic
  MailTableName:
    Value: !Ref MailTable
